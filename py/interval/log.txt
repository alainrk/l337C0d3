
----------------------------------------
Solving for intervals: [[1, 3], [3, 5]], [2, 4]

- Loop: 
	i = 0 
	currInterval = (1,3) 
	newInterval = [2, 4]
	res = []

set new interval to largest possible (using curr and new) = [1, 4]

- Loop: 
	i = 1 
	currInterval = (3,5) 
	newInterval = [1, 4]
	res = []

set new interval to largest possible (using curr and new) = [1, 5]
result = [] + [[1, 5]] + []

----------------------------------------
Solving for intervals: [[1, 3], [7, 8]], [4, 6]

- Loop: 
	i = 0 
	currInterval = (1,3) 
	newInterval = [4, 6]
	res = []

n[0] > y [4 > 3] -- add [1, 3] to result

- Loop: 
	i = 1 
	currInterval = (7,8) 
	newInterval = [4, 6]
	res = [[1, 3]]

n[1] < x [6 < 7] -- decrement i to 0
result = [[1, 3]] + [[4, 6]] + [[7, 8]]

----------------------------------------
Solving for intervals: [[1, 3], [7, 8]], [-2, 0]

- Loop: 
	i = 0 
	currInterval = (1,3) 
	newInterval = [-2, 0]
	res = []

n[1] < x [0 < 1] -- decrement i to -1
result = [] + [[-2, 0]] + [[1, 3], [7, 8]]

----------------------------------------
Solving for intervals: [[1, 3], [7, 8]], [10, 12]

- Loop: 
	i = 0 
	currInterval = (1,3) 
	newInterval = [10, 12]
	res = []

n[0] > y [10 > 3] -- add [1, 3] to result

- Loop: 
	i = 1 
	currInterval = (7,8) 
	newInterval = [10, 12]
	res = [[1, 3]]

n[0] > y [10 > 8] -- add [7, 8] to result
result = [[1, 3], [7, 8]] + [[10, 12]] + []

----------------------------------------
Solving for intervals: [[1, 3], [7, 8]], [2, 5]

- Loop: 
	i = 0 
	currInterval = (1,3) 
	newInterval = [2, 5]
	res = []

set new interval to largest possible (using curr and new) = [1, 5]

- Loop: 
	i = 1 
	currInterval = (7,8) 
	newInterval = [1, 5]
	res = []

n[1] < x [5 < 7] -- decrement i to 0
result = [] + [[1, 5]] + [[7, 8]]

----------------------------------------
Solving for intervals: [[1, 3], [7, 8]], [0, 5]

- Loop: 
	i = 0 
	currInterval = (1,3) 
	newInterval = [0, 5]
	res = []

set new interval to largest possible (using curr and new) = [0, 5]

- Loop: 
	i = 1 
	currInterval = (7,8) 
	newInterval = [0, 5]
	res = []

n[1] < x [5 < 7] -- decrement i to 0
result = [] + [[0, 5]] + [[7, 8]]

----------------------------------------
Solving for intervals: [[1, 3], [7, 8]], [8, 10]

- Loop: 
	i = 0 
	currInterval = (1,3) 
	newInterval = [8, 10]
	res = []

n[0] > y [8 > 3] -- add [1, 3] to result

- Loop: 
	i = 1 
	currInterval = (7,8) 
	newInterval = [8, 10]
	res = [[1, 3]]

set new interval to largest possible (using curr and new) = [7, 10]
result = [[1, 3]] + [[7, 10]] + []

----------------------------------------
Solving for intervals: [[1, 3], [7, 8]], [0, 10]

- Loop: 
	i = 0 
	currInterval = (1,3) 
	newInterval = [0, 10]
	res = []

set new interval to largest possible (using curr and new) = [0, 10]

- Loop: 
	i = 1 
	currInterval = (7,8) 
	newInterval = [0, 10]
	res = []

set new interval to largest possible (using curr and new) = [0, 10]
result = [] + [[0, 10]] + []
